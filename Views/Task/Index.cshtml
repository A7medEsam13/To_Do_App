@model IEnumerable<To_Do_List.ModelView.TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Tasks</h1>


<p>
    <a asp-action="Create" class="btn-outline-primary">Add New</a>
</p>

<h3>Uncompleted</h3>
<div id="uncompleted-tasks">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Start)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.End)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsCompleted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(m => !m.IsCompleted))
            {
                <div class="task-card" data-task-id="@item.Id">
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Start)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.End)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            <button class="btn btn-success complete-btn" data-task-id="@item.Id">Complete</button>
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" >Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                </div>
            }
        </tbody>
    </table>
</div>

<h3>Completed</h3>

<div id="completed-tasks">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Start)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.End)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    Completion
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(m => m.IsCompleted))
            {
                <div class="task-card" data-task-id="@item.Id">
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Start)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.End)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                        <button class="btn btn-warning undo-btn"
                                data-task-id="@item.Id">
                            Undo
                        </button>
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                </div>
            }
    </tbody>
</table>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script>
        $(document).ready(function() {
            // Handle complete button click
            $(document).on('click', '.complete-btn, .undo-btn', function() {
                const button = $(this);
                const taskId = $(this).data('task-id');
                const taskCard = $(this).closest('.task-card');
                const isComplete = button.hasClass('complete-btn');

                $.ajax({
                    url: '/Task/ToggleCompleted/' + taskId,
                    type: 'POST',
                    data: {
                        id: taskId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response && response.success) {
                            // Update button appearance
                            if (response.IsCompleted) {
                                button.removeClass('btn-success complete-btn')
                                      .addClass('btn-warning undo-btn')
                                      .text('Undo');
                                // Move to completed list
                                taskCard.fadeOut(300, function() {
                                    $('#completed-tasks').append($(this));
                                    $(this).fadeIn(300);
                                });
                            } else {
                                button.removeClass('btn-warning undo-btn')
                                      .addClass('btn-success complete-btn')
                                      .text('Mark Complete');
                                // Move back to uncompleted list
                                taskCard.fadeOut(300, function() {
                                    $('#uncompleted-tasks').append($(this));
                                    $(this).fadeIn(300);
                                });
                            }
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", {
                            status: jqXHR.status,
                            statusText: jqXHR.statusText,
                            responseText: jqXHR.responseText,
                            error: errorThrown
                        });
                        alert("Error updating task: " + errorThrown);
                    }
                });
            });
        });
    </script>
}